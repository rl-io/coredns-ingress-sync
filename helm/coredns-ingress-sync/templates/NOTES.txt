{{- if .Values.coreDNS.autoConfigure }}
CoreDNS Ingress Sync has been installed successfully!

üîç Preflight checks have passed - your configuration is safe.

{{- if .Values.metrics.enabled }}
üìä Metrics are available at:
  http://{{ include "coredns-ingress-sync.fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.metrics.port }}/metrics
{{- end }}

üìã Configuration Summary:
  ‚Ä¢ Target CNAME: {{ .Values.controller.targetCNAME }}
  ‚Ä¢ Ingress Class: {{ .Values.controller.ingressClass }}
  ‚Ä¢ Mount Path: {{ if .Values.controller.mountPath }}{{ .Values.controller.mountPath }}{{ else }}/etc/coredns/custom/{{ include "coredns-ingress-sync.fullname" . }}{{ end }}
  {{- if .Values.controller.watchNamespaces }}
  ‚Ä¢ Watching Namespaces: {{ .Values.controller.watchNamespaces }}
  {{- else }}
  ‚Ä¢ Watching: All namespaces (cluster-wide)
  {{- end }}

üéØ The controller will now automatically:
  1. Watch for Ingress resources with ingressClassName="{{ .Values.controller.ingressClass }}"
  2. Create DNS rewrite rules mapping hostnames to {{ .Values.controller.targetCNAME }}
  3. Configure CoreDNS to resolve these hostnames internally

{{- else }}
CoreDNS Ingress Sync has been installed in monitoring mode.

‚ö†Ô∏è  Auto-configuration is DISABLED (coreDNS.autoConfigure=false)
The controller is running but will not modify CoreDNS configuration.

To enable automatic CoreDNS management:
  helm upgrade {{ .Release.Name }} {{ .Chart.Name }} \
    --set coreDNS.autoConfigure=true \
    --reuse-values
{{- end }}

üìö For troubleshooting and configuration options, see:
  https://github.com/rl-io/coredns-ingress-sync/blob/main/docs/

{{- if or (not .Values.coreDNS.autoConfigure) (eq .Values.environment "development") }}

üîß Debug Commands:
  # Check controller logs:
  kubectl logs -n {{ .Release.Namespace }} -l app.kubernetes.io/name={{ include "coredns-ingress-sync.name" . }}

  # Check controller status:
  kubectl get deployment -n {{ .Release.Namespace }} {{ include "coredns-ingress-sync.fullname" . }}

  # Check CoreDNS configuration (if autoConfigure=true):
  kubectl get configmap coredns -n {{ .Values.coreDNS.namespace }} -o yaml

  # If preflight checks failed during install, check logs:
  kubectl logs -n {{ .Release.Namespace }} job/{{ include "coredns-ingress-sync.fullname" . }}-preflight

  # Or use the helper script (from the project repository):
  ./scripts/check-preflight-logs.sh {{ .Release.Name }} {{ .Release.Namespace }}

  # To prevent failed jobs from accumulating, set jobs.failedJobTTL=0:
  helm upgrade {{ .Release.Name }} {{ .Chart.Name }} --set jobs.failedJobTTL=0 --reuse-values
{{- end }}
