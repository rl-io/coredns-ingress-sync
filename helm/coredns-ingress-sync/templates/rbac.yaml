{{- if .Values.rbac.create -}}
{{- if not .Values.controller.watchNamespaces }}
# Cluster-wide permissions when watching all namespaces
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "coredns-ingress-sync.fullname" . }}-cluster
  labels:
    {{- include "coredns-ingress-sync.labels" . | nindent 4 }}
rules:
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "watch", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "coredns-ingress-sync.fullname" . }}-cluster
  labels:
    {{- include "coredns-ingress-sync.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "coredns-ingress-sync.fullname" . }}-cluster
subjects:
- kind: ServiceAccount
  name: {{ include "coredns-ingress-sync.serviceAccountName" . }}
  namespace: {{ .Release.Namespace }}
{{- else }}
# Namespace-scoped permissions when watching specific namespaces
{{- $namespaces := list }}
{{- if kindIs "string" .Values.controller.watchNamespaces }}
  {{- $namespaces = splitList "," .Values.controller.watchNamespaces }}
{{- else if kindIs "slice" .Values.controller.watchNamespaces }}
  {{- $namespaces = .Values.controller.watchNamespaces }}
{{- end }}
{{- range $namespace := $namespaces }}
{{- $namespace = trim (toString $namespace) }}
{{- if $namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ include "coredns-ingress-sync.fullname" $ }}-{{ $namespace }}
  namespace: {{ $namespace }}
  labels:
    {{- include "coredns-ingress-sync.labels" $ | nindent 4 }}
rules:
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ include "coredns-ingress-sync.fullname" $ }}-{{ $namespace }}
  namespace: {{ $namespace }}
  labels:
    {{- include "coredns-ingress-sync.labels" $ | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ include "coredns-ingress-sync.fullname" $ }}-{{ $namespace }}
subjects:
- kind: ServiceAccount
  name: {{ include "coredns-ingress-sync.serviceAccountName" $ }}
  namespace: {{ $.Release.Namespace }}
{{- end }}
{{- end }}
{{- end }}

# CoreDNS permissions are always cluster-scoped
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "coredns-ingress-sync.fullname" . }}-coredns
  labels:
    {{- include "coredns-ingress-sync.labels" . | nindent 4 }}
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
  resourceNames: ["{{ .Values.coreDNS.configMapName }}", "{{ .Values.controller.dynamicConfigMap.name }}"]
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["create", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "watch", "update", "patch"]
  resourceNames: ["coredns"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "coredns-ingress-sync.fullname" . }}-coredns
  labels:
    {{- include "coredns-ingress-sync.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "coredns-ingress-sync.fullname" . }}-coredns
subjects:
- kind: ServiceAccount
  name: {{ include "coredns-ingress-sync.serviceAccountName" . }}
  namespace: {{ .Release.Namespace }}

# Leader election permissions (always in controller namespace)
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ include "coredns-ingress-sync.fullname" . }}-leader-election
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "coredns-ingress-sync.labels" . | nindent 4 }}
rules:
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ include "coredns-ingress-sync.fullname" . }}-leader-election
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "coredns-ingress-sync.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ include "coredns-ingress-sync.fullname" . }}-leader-election
subjects:
- kind: ServiceAccount
  name: {{ include "coredns-ingress-sync.serviceAccountName" . }}
  namespace: {{ .Release.Namespace }}
{{- end }}
