# Default values for coredns-ingress-sync
replicaCount: 1

image:
  repository: ghcr.io/rl-io/coredns-ingress-sync
  pullPolicy: IfNotPresent
  # tag defaults to Chart.AppVersion

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 65534
  runAsNonRoot: true
  runAsUser: 65534
  runAsGroup: 65534

securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  capabilities:
    drop:
    - ALL

resources:
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 10m
    memory: 64Mi

# Metrics configuration
metrics:
  enabled: true
  port: 8080
  path: /metrics
  serviceMonitor:
    enabled: false
    interval: 30s
    scrapeTimeout: 10s
    labels: {}
    annotations: {}

# Health check configuration  
healthCheck:
  enabled: true
  port: 8081
  path: /healthz

nodeSelector: {}

tolerations: []

affinity: {}

# CoreDNS configuration
coreDNS:
  # Automatically configure CoreDNS for dynamic DNS resolution
  # IMPORTANT: Set to true to enable automatic CoreDNS configuration
  # When false, manual CoreDNS configuration is required
  autoConfigure: false
  # Namespace where CoreDNS is deployed
  namespace: kube-system
  # Name of the existing CoreDNS ConfigMap to modify
  configMapName: coredns

# Controller configuration
controller:
  # Ingress class to watch
  ingressClass: "nginx"
  # Target CNAME for DNS resolution
  targetCNAME: "ingress-nginx-controller.ingress-nginx.svc.cluster.local."
  # Namespace filtering - empty means watch all namespaces
  # Set to comma-separated list to watch specific namespaces: "default,production,staging"
  watchNamespaces: ""
  # Log level: debug, info, warn, error
  logLevel: "info"
  
  # Dynamic ConfigMap configuration (created by this controller)
  dynamicConfigMap:
    name: "coredns-ingress-sync-rewrite-rules"
    key: "dynamic.server"
  
  # Volume name for mounting dynamic configuration
  volumeName: "coredns-ingress-sync-volume"
  
  # Environment variables (for advanced configuration)
  env: {}

# RBAC configuration
rbac:
  # Specifies whether RBAC resources should be created
  create: true

# Leader election configuration
leaderElection:
  # Enable leader election for high availability
  enabled: true
