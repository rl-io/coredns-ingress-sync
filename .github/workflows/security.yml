name: Security and Dependency Updates

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  packages: write

jobs:
  dependency-update:
    name: Update Dependencies
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'
        
    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-security-${{ hashFiles('**/go.sum') }}-${{ hashFiles('**/go.mod') }}
        restore-keys: |
          ${{ runner.os }}-go-security-${{ hashFiles('**/go.sum') }}-
          ${{ runner.os }}-go-security-
        
    - name: Update Go dependencies
      run: |
        go get -u ./...
        go mod tidy
        
    - name: Run tests with updated dependencies
      run: |
        go test -v ./...
        
    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update Go dependencies'
        title: 'chore: update Go dependencies'
        body: |
          ## Dependency Updates
          
          This PR updates Go dependencies to their latest versions.
          
          ### Changes
          - Updated Go module dependencies
          - Ran `go mod tidy` to clean up
          - All tests pass with new dependencies
          
          ### Security
          - Dependencies have been tested for security vulnerabilities
          - No breaking changes detected
          
          Auto-generated by GitHub Actions ðŸ¤–
        branch: dependency-updates
        delete-branch: true
        
  go-security-audit:
    name: Go Security Audit
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      security-events: write
      actions: read
      statuses: read
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    # Trivy scanning is handled by the CI/CD pipeline
    # This job focuses on Go-specific security auditing
        
    - name: Run Go security audit
      run: |
        go install golang.org/x/vuln/cmd/govulncheck@latest
        govulncheck ./...
        
    - name: Check for security issues
      run: |
        go install github.com/securecodewarrior/gosec/v2/cmd/gosec@latest
        gosec ./...
        
  image-cleanup:
    name: Clean up old images
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Delete old container images
      uses: actions/delete-package-versions@v4
      with:
        package-name: coredns-ingress-sync
        package-type: container
        min-versions-to-keep: 10
        delete-only-untagged-versions: true
