name: Build and Test

on:
  # Keep for manual testing only
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  security-events: write
  pull-requests: write
  issues: write
  statuses: write

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    outputs:
      image-tags: ${{ steps.docker_build.outputs.image_tags }}
      image-digest: ${{ steps.docker_build.outputs.image_digest }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Build Docker Image
      id: docker_build
      uses: ./.github/actions/docker-build
      with:
        image_name: coredns-ingress-sync
        push: false
        platforms: linux/amd64
        export_artifact: true

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download image artifact
      uses: actions/download-artifact@v4
      with:
        name: docker-image
        path: /tmp
        
    - name: Run Comprehensive Tests
      uses: ./.github/actions/test-runner
      with:
        go_version: '1.24'
        run_integration_tests: true
        run_e2e_tests: true
        codecov_token: ${{ secrets.CODECOV_TOKEN }}
        image_artifact_path: /tmp
        cluster_timeout: 120

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download image artifact
      uses: actions/download-artifact@v4
      with:
        name: docker-image
        path: /tmp
        
    - name: Run Security Scan
      uses: ./.github/actions/security-scan
      with:
        image_name: coredns-ingress-sync:test
        image_artifact_path: /tmp
        scan_filesystem: true
        upload_sarif: true
        github_token: ${{ secrets.GITHUB_TOKEN }}
