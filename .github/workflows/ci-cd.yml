name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize, reopened ]
  # Handle release-please events
  repository_dispatch:
    types: [release-please]
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  security-events: write
  pull-requests: write
  issues: write
  statuses: write
  actions: write

jobs:
  debug-info:
    name: Debug Information
    runs-on: ubuntu-latest
    steps:
    - name: Debug PR info
      run: |
        echo "Event: ${{ github.event_name }}"
        echo "Ref: ${{ github.ref }}"
        echo "Head ref: ${{ github.head_ref }}"
        echo "Base ref: ${{ github.base_ref }}"
        echo "Actor: ${{ github.actor }}"
        echo "Repository: ${{ github.repository }}"
        if [ "${{ github.event_name }}" = "repository_dispatch" ]; then
          echo "Dispatch type: ${{ github.event.action }}"
          echo "PR number: ${{ github.event.client_payload.pr_number }}"
        fi

  # Trigger other workflows based on event type
  trigger-build-test:
    name: Trigger Build and Test
    runs-on: ubuntu-latest
    permissions:
      actions: write
      contents: read
    if: |
      (github.event_name == 'repository_dispatch' && github.event.action == 'release-please') ||
      (github.event_name == 'push' && github.ref == 'refs/heads/main')
    steps:
    - name: Trigger Build and Test Workflow (Repository Dispatch)
      if: github.event_name == 'repository_dispatch' && github.event.action == 'release-please'
      uses: peter-evans/repository-dispatch@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        repository: ${{ github.repository }}
        event-type: build-test
        client-payload: |
          {
            "pr_number": "${{ github.event.client_payload.pr_number }}",
            "ref": "${{ github.event.client_payload.ref }}",
            "sha": "${{ github.event.client_payload.sha }}"
          }
    
    - name: Trigger Build and Test Workflow (Direct Push)
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: peter-evans/repository-dispatch@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        repository: ${{ github.repository }}
        event-type: manual-build-test

  release:
    name: Create Release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    permissions:
      contents: write
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download artifacts
      uses: actions/download-artifact@v4
      
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        draft: false
        prerelease: false
        generate_release_notes: true
        files: |
          coverage-reports/coverage.html
          test-results/**/*
          sbom/sbom.spdx.json
        body: |
          ## 🚀 coredns-ingress-sync controller Release
          
          This release includes:
          - ✅ Full test suite validation
          - 🔒 Security vulnerability scanning
          - 📦 Multi-architecture Docker images (amd64, arm64)
          - 🔐 Signed container images
          - 📋 Software Bill of Materials (SBOM)
          
          ### Docker Images
          ```bash
          docker pull ghcr.io/${{ github.repository }}:${{ github.ref_name }}
          docker pull ghcr.io/${{ github.repository }}:latest
          ```
          
          ### Verification
          ```bash
          # Verify image signature
          cosign verify ghcr.io/${{ github.repository }}:${{ github.ref_name }}
          ```
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
