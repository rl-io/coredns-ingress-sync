name: 'Build Docker Image'
description: 'Builds Docker image with consistent tagging and caching'
inputs:
  image_name:
    description: 'Base image name'
    required: true
    default: 'coredns-ingress-sync'
  push:
    description: 'Whether to push the image'
    required: false
    default: 'false'
  platforms:
    description: 'Target platforms for build'
    required: false
    default: 'linux/amd64'
  export_artifact:
    description: 'Whether to export image as artifact'
    required: false
    default: 'true'
  registry:
    description: 'Container registry'
    required: false
    default: 'ghcr.io'
  registry_username:
    description: 'Registry username'
    required: false
  registry_password:
    description: 'Registry password'
    required: false

outputs:
  image_tags:
    description: 'Generated image tags'
    value: ${{ steps.meta.outputs.tags }}
  image_digest:
    description: 'Image digest'
    value: ${{ steps.build.outputs.digest }}
  image_metadata:
    description: 'Image metadata'
    value: ${{ steps.meta.outputs.json }}

runs:
  using: 'composite'
  steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Container Registry
      if: inputs.push == 'true' && inputs.registry_username != '' && inputs.registry_password != ''
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.registry_username }}
        password: ${{ inputs.registry_password }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ${{ inputs.image_name }}
          ${{ inputs.push == 'true' && format('{0}/{1}', inputs.registry, github.repository) || '' }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,prefix={{branch}}-,enable={{is_default_branch}}
          type=sha,prefix=pr-,enable=${{ github.event_name == 'pull_request' }}
          type=raw,value=latest,enable={{is_default_branch}}
          type=raw,value=test,enable=true
          
    - name: Build and optionally push image
      id: build
      uses: docker/build-push-action@v6
      with:
        context: .
        platforms: ${{ inputs.platforms }}
        push: ${{ inputs.push }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        outputs: ${{ inputs.export_artifact == 'true' && inputs.push == 'false' && 'type=docker,dest=/tmp/image.tar' || '' }}
        
    - name: Upload image artifact
      if: inputs.export_artifact == 'true' && inputs.push == 'false'
      uses: actions/upload-artifact@v4
      with:
        name: docker-image
        path: /tmp/image.tar
        retention-days: 1
        
    - name: Display build summary
      shell: bash
      run: |
        echo "::group::üê≥ Docker Build Summary"
        echo "Image tags: ${{ steps.meta.outputs.tags }}"
        echo "Platforms: ${{ inputs.platforms }}"
        echo "Push: ${{ inputs.push }}"
        echo "Export artifact: ${{ inputs.export_artifact }}"
        if [ -n "${{ steps.build.outputs.digest }}" ]; then
          echo "Digest: ${{ steps.build.outputs.digest }}"
        fi
        echo "::endgroup::"
